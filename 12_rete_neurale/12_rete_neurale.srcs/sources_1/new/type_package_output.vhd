----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 20.12.2022 16:21:50
-- Design Name: 
-- Module Name: type_package - asdasd
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

package type_package_output is

type uscite is array (0 to 6) of std_logic_vector(63 downto 0);
type output_bias is array (0 to 6) of std_logic_vector(6 downto 0);

type rom_type_output is array (0 to 9) of std_logic_vector(31 downto 0);
type array_rom_type_output is array (0 to 6) of rom_type_output;

constant neurone_output_0 : rom_type_output := (
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"11111111111111101001011101010000",
"00000000000000000000000000000000",
"11111111111111000001000101110000",
"00000000000000110010110110000100",
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"11111111111111101000001000101000",
"00000000000001110010011111111100"
);

constant neurone_output_1 : rom_type_output := (
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"00000000000000010001000110100000",
"00000000000000000000000000000000",
"00000000000000100010100110011100",
"11111111111111101111111001100011",
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"11111111111111011110001100001110",
"00000000000000101011011011100100"
);

constant neurone_output_2 : rom_type_output := (
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"11111111111111111011010101100000",
"00000000000000000000000000000000",
"11111111111111100101010000110110",
"00000000000000011010010001010001",
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"11111111111111101001001000010001",
"00000000000001001100111111011010"
);

constant neurone_output_3 : rom_type_output := (
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"00000000000000001110110001010000",
"00000000000000000000000000000000",
"00000000000001010000001101011110",
"11111111111111100010010101110011",
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"11111111111111110011000100101011",
"00000000000000001001110111101110"
);

constant neurone_output_4 : rom_type_output := (
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"00000000000000001111100011000000",
"00000000000000000000000000000000",
"11111111111110100011001101010010",
"00000000000000010101001011110111",
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"11111111111111110011000100101011",
"00000000000001010110110111001000"
);

constant neurone_output_5 : rom_type_output := (
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"00000000000000011111110111110000",
"00000000000000000000000000000000",
"00000000000000101010011101101110",
"11111111111111011110111100110111",
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"11111111111111100100001010000100",
"00000000000000001111110010110000"
);

constant neurone_output_6 : rom_type_output := (
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"11111111111111110101111001010000",
"00000000000000000000000000000000",
"00000000000000101111001011101100",
"00000000000000011100110011111110",
"00000000000000000000000000000000",
"00000000000000000000000000000000",
"00000000000000101000110001010001",
"11111111111110000111100101000010"
);

constant array_output : array_rom_type_output := (
neurone_output_0,
neurone_output_1,
neurone_output_2,
neurone_output_3,
neurone_output_4,
neurone_output_5,
neurone_output_6
);

constant value_output_bias : output_bias:= (
"0001100",
"0010111",
"0101001",
"0000100",
"1111100",
"0000100",
"1110111"
);

end package type_package_output; 

package body type_package_output is
 
end package body type_package_output;
